{"ast":null,"code":"import { selectorFamily } from 'recoil';\nimport { dataState } from './data';\nexport const selectedPaginatedData = selectorFamily({\n  key: 'select-table-page-data',\n  get: ({\n    tableKey\n  }) => ({\n    get\n  }) => {\n    const rows = get(dataState(tableKey));\n    const start = page.rowsPerPage * page.page;\n    const end = start + page.rowsPerPage - 1;\n    const pageRows = rows.slice(start, end);\n    console.log('rows for page', pageRows);\n    return pageRows;\n  }\n});\nexport const rowSelector = selectorFamily({\n  key: 'select-table-rows',\n  get: tableKey => ({\n    get\n  }) => get(dataState(tableKey)).slice(0, 10)\n});","map":{"version":3,"sources":["C:/Users/rbaxt/Projects/recoil-table/packages/recoil-table/selectors/rows.ts"],"names":["selectorFamily","dataState","selectedPaginatedData","key","get","tableKey","rows","start","page","rowsPerPage","end","pageRows","slice","console","log","rowSelector"],"mappings":"AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAO,MAAMC,qBAAqB,GAAGF,cAAc,CAAW;AAC5DG,EAAAA,GAAG,EAAE,wBADuD;AAE5DC,EAAAA,GAAG,EACD,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACA,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAa;AACX,UAAME,IAAI,GAAGF,GAAG,CAACH,SAAS,CAACI,QAAD,CAAV,CAAhB;AACA,UAAME,KAAK,GAAGC,IAAI,CAACC,WAAL,GAAmBD,IAAI,CAACA,IAAtC;AACA,UAAME,GAAG,GAAGH,KAAK,GAAGC,IAAI,CAACC,WAAb,GAA2B,CAAvC;AACA,UAAME,QAAQ,GAAGL,IAAI,CAACM,KAAL,CAAWL,KAAX,EAAkBG,GAAlB,CAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,QAA7B;AACA,WAAOA,QAAP;AACD;AAXyD,CAAX,CAA5C;AAcP,OAAO,MAAMI,WAAW,GAAGf,cAAc,CAAW;AAClDG,EAAAA,GAAG,EAAE,mBAD6C;AAElDC,EAAAA,GAAG,EACAC,QAAD,IACA,CAAC;AAAED,IAAAA;AAAF,GAAD,KACEA,GAAG,CAACH,SAAS,CAACI,QAAD,CAAV,CAAH,CAAyBO,KAAzB,CAA+B,CAA/B,EAAkC,EAAlC;AAL8C,CAAX,CAAlC","sourcesContent":["import { selectorFamily } from 'recoil';\r\nimport { dataState } from './data';\r\n\r\nexport const selectedPaginatedData = selectorFamily<any, any>({\r\n  key: 'select-table-page-data',\r\n  get:\r\n    ({ tableKey }) =>\r\n    ({ get }) => {\r\n      const rows = get(dataState(tableKey));\r\n      const start = page.rowsPerPage * page.page;\r\n      const end = start + page.rowsPerPage - 1;\r\n      const pageRows = rows.slice(start, end);\r\n      console.log('rows for page', pageRows);\r\n      return pageRows;\r\n    },\r\n});\r\n\r\nexport const rowSelector = selectorFamily<any, any>({\r\n  key: 'select-table-rows',\r\n  get:\r\n    (tableKey) =>\r\n    ({ get }) =>\r\n      get(dataState(tableKey)).slice(0, 10),\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { atomFamily, selectorFamily } from 'recoil';\nimport { dataState } from './data';\nexport const pageState = atomFamily({\n  key: 'table-page',\n  default: {\n    page: 0,\n    rowsPerPage: 10\n  }\n});\nexport const selectedPaginatedData = selectorFamily({\n  key: 'select-table-page-data',\n  get: ({\n    tableKey,\n    page\n  }) => ({\n    get\n  }) => {\n    const rows = get(dataState(tableKey));\n    const start = page.rowsPerPage * page.page;\n    const end = start + page.rowsPerPage - 1;\n    const pageRows = rows.slice(start, end);\n    console.log('rows for page', pageRows);\n    return pageRows;\n  }\n});","map":{"version":3,"sources":["C:/Users/rbaxt/Projects/recoil-table/packages/recoil-table/selectors/page.ts"],"names":["atomFamily","selectorFamily","dataState","pageState","key","default","page","rowsPerPage","selectedPaginatedData","get","tableKey","rows","start","end","pageRows","slice","console","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,QAA3C;AACA,SAASC,SAAT,QAA0B,QAA1B;AAOA,OAAO,MAAMC,SAAS,GAAGH,UAAU,CAAe;AAChDI,EAAAA,GAAG,EAAE,YAD2C;AAEhDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,WAAW,EAAE;AAFN;AAFuC,CAAf,CAA5B;AAQP,OAAO,MAAMC,qBAAqB,GAAGP,cAAc,CAAiB;AAClEG,EAAAA,GAAG,EAAE,wBAD6D;AAElEK,EAAAA,GAAG,EACD,CAAC;AAAEC,IAAAA,QAAF;AAAYJ,IAAAA;AAAZ,GAAD,KACA,CAAC;AAAEG,IAAAA;AAAF,GAAD,KAAa;AACX,UAAME,IAAI,GAAGF,GAAG,CAACP,SAAS,CAACQ,QAAD,CAAV,CAAhB;AACA,UAAME,KAAK,GAAGN,IAAI,CAACC,WAAL,GAAmBD,IAAI,CAACA,IAAtC;AACA,UAAMO,GAAG,GAAGD,KAAK,GAAGN,IAAI,CAACC,WAAb,GAA2B,CAAvC;AACA,UAAMO,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAWH,KAAX,EAAkBC,GAAlB,CAAjB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,QAA7B;AACA,WAAOA,QAAP;AACD;AAX+D,CAAjB,CAA5C","sourcesContent":["import { atomFamily, selectorFamily } from 'recoil';\r\nimport { dataState } from './data';\r\n\r\nexport interface Page {\r\n  rowsPerPage: number;\r\n  page: number;\r\n}\r\n\r\nexport const pageState = atomFamily<Page, string>({\r\n  key: 'table-page',\r\n  default: {\r\n    page: 0,\r\n    rowsPerPage: 10,\r\n  },\r\n});\r\n\r\nexport const selectedPaginatedData = selectorFamily<any, PageProps>({\r\n  key: 'select-table-page-data',\r\n  get:\r\n    ({ tableKey, page }) =>\r\n    ({ get }) => {\r\n      const rows = get(dataState(tableKey));\r\n      const start = page.rowsPerPage * page.page;\r\n      const end = start + page.rowsPerPage - 1;\r\n      const pageRows = rows.slice(start, end);\r\n      console.log('rows for page', pageRows);\r\n      return pageRows;\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
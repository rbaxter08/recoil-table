{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rbaxt\\\\Projects\\\\recoil-table\\\\packages\\\\client\\\\src\\\\components\\\\ReactTableUI\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport ReactTablePagination from './ReactTablePagination';\nimport Table from '@material-ui/core/Table';\nimport ReactTableHeader from './ReactTableHeader';\nimport ReactTableBody from './ReactTableBody';\nimport { Styles } from '../tableUtils';\nimport { jsxDEV as _jsxDEV } from \"@welldone-software/why-did-you-render/jsx-dev-runtime\";\n\nfunction ReactTableUI({\n  columns,\n  data,\n  localPage,\n  onPageChange\n}) {\n  _s();\n\n  const {\n    headerGroups,\n    prepareRow,\n    // @ts-ignore\n    page,\n    // @ts-ignore\n    gotoPage,\n    // @ts-ignore\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    // @ts-ignore\n    initialState: {\n      pageIndex: 0\n    }\n  }, usePagination);\n  React.useEffect(() => {\n    if (localPage) gotoPage(localPage);\n  }, [localPage, gotoPage]);\n\n  function handlePageChange(page) {\n    onPageChange(page);\n    gotoPage(page);\n  } // Render the UI for your table\n\n\n  return _jsxDEV(Styles, {\n    children: _jsxDEV(Table, {\n      children: [_jsxDEV(ReactTableHeader, {\n        headerGroups: headerGroups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), _jsxDEV(ReactTableBody, {\n        page: page,\n        prepareRow: prepareRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), _jsxDEV(ReactTablePagination, {\n        totalRowCount: data.length,\n        setPage: handlePageChange,\n        page: {\n          page: pageIndex,\n          rowsPerPage: pageSize\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReactTableUI, \"Ffj4tjeRat96c6R8TwSp+4nafM0=\", false, function () {\n  return [useTable];\n});\n\n_c = ReactTableUI;\nexport default ReactTableUI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactTableUI\");","map":{"version":3,"sources":["C:/Users/rbaxt/Projects/recoil-table/packages/client/src/components/ReactTableUI/index.tsx"],"names":["React","useTable","usePagination","ReactTablePagination","Table","ReactTableHeader","ReactTableBody","Styles","ReactTableUI","columns","data","localPage","onPageChange","headerGroups","prepareRow","page","gotoPage","state","pageIndex","pageSize","initialState","useEffect","handlePageChange","length","rowsPerPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,aAAxC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,eAAvB;;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA,SAAjB;AAA4BC,EAAAA;AAA5B,CAAtB,EAAuE;AAAA;;AACrE,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,UAFI;AAGJ;AACAC,IAAAA,IAJI;AAKJ;AACAC,IAAAA,QANI;AAOJ;AACAC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb;AARH,MASFlB,QAAQ,CACV;AACEQ,IAAAA,OADF;AAEEC,IAAAA,IAFF;AAGE;AACAU,IAAAA,YAAY,EAAE;AAAEF,MAAAA,SAAS,EAAE;AAAb;AAJhB,GADU,EAOVhB,aAPU,CATZ;AAmBAF,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpB,QAAIV,SAAJ,EAAeK,QAAQ,CAACL,SAAD,CAAR;AAChB,GAFD,EAEG,CAACA,SAAD,EAAYK,QAAZ,CAFH;;AAIA,WAASM,gBAAT,CAA0BP,IAA1B,EAAwC;AACtCH,IAAAA,YAAY,CAACG,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAACD,IAAD,CAAR;AACD,GA3BoE,CA6BrE;;;AACA,SACE,QAAC,MAAD;AAAA,cACE,QAAC,KAAD;AAAA,iBACE,QAAC,gBAAD;AAAkB,QAAA,YAAY,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAEE,IAAtB;AAA4B,QAAA,UAAU,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,QAAC,oBAAD;AACE,QAAA,aAAa,EAAEJ,IAAI,CAACa,MADtB;AAEE,QAAA,OAAO,EAAED,gBAFX;AAGE,QAAA,IAAI,EAAE;AACJP,UAAAA,IAAI,EAAEG,SADF;AAEJM,UAAAA,WAAW,EAAEL;AAFT;AAHR;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA9CQX,Y;UAUHP,Q;;;KAVGO,Y;AAgDT,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { useTable, usePagination } from 'react-table';\r\nimport ReactTablePagination from './ReactTablePagination';\r\nimport Table from '@material-ui/core/Table';\r\nimport ReactTableHeader from './ReactTableHeader';\r\nimport ReactTableBody from './ReactTableBody';\r\nimport { Styles } from '../tableUtils';\r\n\r\nfunction ReactTableUI({ columns, data, localPage, onPageChange }: any) {\r\n  const {\r\n    headerGroups,\r\n    prepareRow,\r\n    // @ts-ignore\r\n    page,\r\n    // @ts-ignore\r\n    gotoPage,\r\n    // @ts-ignore\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      // @ts-ignore\r\n      initialState: { pageIndex: 0 },\r\n    },\r\n    usePagination,\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (localPage) gotoPage(localPage);\r\n  }, [localPage, gotoPage]);\r\n\r\n  function handlePageChange(page: number) {\r\n    onPageChange(page);\r\n    gotoPage(page);\r\n  }\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <Styles>\r\n      <Table>\r\n        <ReactTableHeader headerGroups={headerGroups} />\r\n        <ReactTableBody page={page} prepareRow={prepareRow} />\r\n        <ReactTablePagination\r\n          totalRowCount={data.length}\r\n          setPage={handlePageChange}\r\n          page={{\r\n            page: pageIndex,\r\n            rowsPerPage: pageSize,\r\n          }}\r\n        />\r\n      </Table>\r\n    </Styles>\r\n  );\r\n}\r\n\r\nexport default ReactTableUI;\r\n"]},"metadata":{},"sourceType":"module"}
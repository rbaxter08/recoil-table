{"ast":null,"code":"import { selectorFamily } from 'recoil';\nimport { dataState } from './data';\nimport { pageState } from './page';\nexport const selectedPaginatedData = selectorFamily({\n  key: 'select-table-page-data',\n  get: tableKey => ({\n    get\n  }) => {\n    const page = get(pageState(tableKey));\n    const rows = get(dataState(tableKey));\n    const start = page.rowsPerPage * page.page;\n    const end = start + page.rowsPerPage - 1;\n    const pageRows = rows.slice(start, end);\n    return pageRows;\n  }\n});\nexport const rowSelector = selectorFamily({\n  key: 'select-table-rows',\n  get: ({\n    tableKey,\n    options\n  }) => ({\n    get\n  }) => {\n    return options.controlledPagination ? {\n      rows: get(dataState(tableKey)),\n      total: get(dataState(tableKey)).total\n    } : get(selectedPaginatedData(tableKey));\n  }\n});","map":{"version":3,"sources":["C:/Users/rbaxt/Projects/recoil-table/packages/recoil-table/selectors/rows.ts"],"names":["selectorFamily","dataState","pageState","selectedPaginatedData","key","get","tableKey","page","rows","start","rowsPerPage","end","pageRows","slice","rowSelector","options","controlledPagination","total"],"mappings":"AAAA,SAASA,cAAT,QAA+B,QAA/B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AAEA,OAAO,MAAMC,qBAAqB,GAAGH,cAAc,CAAc;AAC/DI,EAAAA,GAAG,EAAE,wBAD0D;AAE/DC,EAAAA,GAAG,EACAC,QAAD,IACA,CAAC;AAAED,IAAAA;AAAF,GAAD,KAAa;AACX,UAAME,IAAI,GAAGF,GAAG,CAACH,SAAS,CAACI,QAAD,CAAV,CAAhB;AACA,UAAME,IAAI,GAAGH,GAAG,CAACJ,SAAS,CAACK,QAAD,CAAV,CAAhB;AACA,UAAMG,KAAK,GAAGF,IAAI,CAACG,WAAL,GAAmBH,IAAI,CAACA,IAAtC;AACA,UAAMI,GAAG,GAAGF,KAAK,GAAGF,IAAI,CAACG,WAAb,GAA2B,CAAvC;AACA,UAAME,QAAQ,GAAGJ,IAAI,CAACK,KAAL,CAAWJ,KAAX,EAAkBE,GAAlB,CAAjB;AACA,WAAOC,QAAP;AACD;AAX4D,CAAd,CAA5C;AAcP,OAAO,MAAME,WAAW,GAAGd,cAAc,CAAW;AAClDI,EAAAA,GAAG,EAAE,mBAD6C;AAElDC,EAAAA,GAAG,EACD,CAAC;AAAEC,IAAAA,QAAF;AAAYS,IAAAA;AAAZ,GAAD,KACA,CAAC;AAAEV,IAAAA;AAAF,GAAD,KAAa;AAEX,WAAOU,OAAO,CAACC,oBAAR,GACH;AAAER,MAAAA,IAAI,EAAEH,GAAG,CAACJ,SAAS,CAACK,QAAD,CAAV,CAAX;AAAkCW,MAAAA,KAAK,EAAEZ,GAAG,CAACJ,SAAS,CAACK,QAAD,CAAV,CAAH,CAAyBW;AAAlE,KADG,GAEHZ,GAAG,CAACF,qBAAqB,CAACG,QAAD,CAAtB,CAFP;AAGD;AAT+C,CAAX,CAAlC","sourcesContent":["import { selectorFamily } from 'recoil';\r\nimport { dataState } from './data';\r\nimport { pageState } from './page';\r\n\r\nexport const selectedPaginatedData = selectorFamily<any, string>({\r\n  key: 'select-table-page-data',\r\n  get:\r\n    (tableKey) =>\r\n    ({ get }) => {\r\n      const page = get(pageState(tableKey));\r\n      const rows = get(dataState(tableKey));\r\n      const start = page.rowsPerPage * page.page;\r\n      const end = start + page.rowsPerPage - 1;\r\n      const pageRows = rows.slice(start, end);\r\n      return pageRows;\r\n    },\r\n});\r\n\r\nexport const rowSelector = selectorFamily<any, any>({\r\n  key: 'select-table-rows',\r\n  get:\r\n    ({ tableKey, options }) =>\r\n    ({ get }) => {\r\n\r\n      return options.controlledPagination\r\n        ? { rows: get(dataState(tableKey)), total: get(dataState(tableKey)).total}\r\n        : get(selectedPaginatedData(tableKey));\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}